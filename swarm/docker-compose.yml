version: '3.8'

services:

  # MONITORING
  zipkin:
    image: openzipkin/zipkin
    ports:
      - "9411:9411"
    networks:
      - ftn_devops_network_swarm

  loki:
    image: grafana/loki:2.9.0
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - ftn_devops_network_swarm

  grafana:
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
        - name: Loki
          type: loki
          access: proxy
          orgId: 1
          url: http://loki:3100
          basicAuth: false
          isDefault: true
          version: 1
          editable: false
        EOF
        /run.sh
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    networks:
      - ftn_devops_network_swarm

  prometheus:
    image: prom/prometheus:v2.35.0
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus:/var/lib/prometheus
    networks:
      - ftn_devops_network_swarm

  node-exporter:
    image: prom/node-exporter:v1.1.2
    ports:
      - "9100:9100"
    networks:
      - ftn_devops_network_swarm

  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    privileged: true
    command:
      - '-port=8090'
    ports:
      - "8090:8090"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    networks:
      - ftn_devops_network_swarm

  # DATABASE
  postgres-db-user:
    image: postgres:latest
    ports:
      - "5433:5432"
    networks:
      - ftn_devops_network_swarm
    environment:
      POSTGRES_DB: devops_user_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: devops123

  # SERVICES
  # TODO add other services
  user-service:
    image: mihajlodj/devops-user-service:1.0.1
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-db-user:5432/devops_user_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: devops123
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
    ports:
      - "8080:8080"
    networks:
      - ftn_devops_network_swarm
    depends_on:
      - postgres-db-user
      - zipkin
      - loki
      - grafana
    deploy:
      restart_policy:
        condition: on-failure

# NETWORKS & VOLUMES
networks:
  ftn_devops_network_swarm:
    external: true

volumes:
  postgres-db-user:
  prometheus:

